{"version":3,"file":"static/webpack/static/development/pages/index.js.bf3c6024b7864d819670.hot-update.js","sources":["webpack:///./resources/mic.js"],"sourcesContent":["class Mic {\n    constructor() {\n        this.source;\n        this.context;\n\n        this.analyser;\n        this.frequency;\n\n        this.callback;\n        this.setValue;\n        this.interval = 1000 / 15;\n        this.then = Date.now();\n\n        this.animate = this.animate.bind(this);\n        this.set = this.set.bind(this);\n    }\n\n    animate() {\n        if (this.callback === null) {\n            return;\n        }\n\n        this.callback = requestAnimationFrame(this.animate);\n        const now = Date.now();\n        const delta = now - this.then;\n        if (delta <= this.interval) {\n            return;\n\n        }\n        this.then = now - (delta % this.interval);\n        this.analyser.getByteFrequencyData(this.frequency);\n        const value = this.frequency.reduce((avg, slot) => avg + slot, 0) / this.frequency.length;\n        const scaled = (value / 128) + 1;\n        this.setValue(scaled);\n    }\n\n    set(stream) {\n        this.context = new AudioContext();\n\n        this.analyser = this.context.createAnalyser();\n        this.analyser.fftSize = 512;\n        this.analyser.minDecibels = -90;\n        this.analyser.maxDecibels = -10;\n        this.analyser.smoothingTimeConstant = 0.5;\n\n        this.frequency = new Uint8Array(this.analyser.frequencyBinCount);\n\n        this.source = this.context.createMediaStreamSource(stream);\n        this.source.connect(this.analyser);\n\n        this.callback = requestAnimationFrame(this.animate);\n    }\n\n    on(setValue) {\n        if (this.source) {\n            this.callback = requestAnimationFrame(this.animate);\n            return;\n        }\n        this.setValue = setValue;\n        navigator.mediaDevices.getUserMedia({ audio: true }).then(this.set);\n    }\n\n    off() {\n        cancelAnimationFrame(this.callback);\n        this.callback = null;\n    }\n}\n\nexport default new Mic();\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;;;;;;AAGA;;;;A","sourceRoot":""}